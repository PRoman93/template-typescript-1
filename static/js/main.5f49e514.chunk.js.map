{"version":3,"sources":["ui/authorization/Header/Header.module.css","ui/common/Input.tsx","ui/common/LInk.tsx","ui/common/Button.tsx","ui/common/Title.tsx","ui/authorization/SignIn.tsx","ui/authorization/Register.tsx","ui/authorization/Forgot.tsx","ui/authorization/SetNewPass.tsx","ui/authorization/Header/Header.tsx","ui/Cards.tsx","bll/reducers/forgot-reducer.ts","bll/reducers/profile-reducer.ts","bll/reducers/registser-reducer.ts","bll/reducers/setNewPass-reducer.ts","bll/reducers/signIn-reducer.ts","bll/store.ts","App.tsx","serviceWorker.ts","index.tsx","ui/authorization/Auth.module.css","ui/common/Common.module.css"],"names":["module","exports","Input","props","className","styles","forInput","placeholder","type","Link","forLinks","to","way","wordOfLink","Button","forButton","typeOfButton","onClick","actionOfButton","nameOfButton","Title","title","SignIn","wrapperOfAuth","Register","Forgot","SetNewPass","Header","wrapperOfHeader","Cards","path","render","initialState","forgotReducer","state","profileReducer","registerReducer","setNewPassReducer","signInReducer","rootReducer","combineReducers","forgot","register","setNewPass","signIn","profile","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f49e514.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfHeader\":\"Header_wrapperOfHeader__3r8LB\"};","import React from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\n\r\nconst Input = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <input className={styles.forInput} //onFocus={true}\r\n               //onBlur={()=>{}}\r\n               //value={props.value}\r\n               //onChange={props.onChange}\r\n               placeholder={props.placeholder}\r\n               type={props.type}/>\r\n    )\r\n}\r\nexport default Input\r\n\r\ntype OwnPropsType = {\r\n    //value: string,\r\n    //onChange: ()=>void,\r\n    placeholder: string,\r\n    type: 'text' | 'password' | 'radio' | 'checkbox'\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Common.module.css'\r\n\r\nconst Link = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <NavLink className={styles.forLinks} to={props.way}>{props.wordOfLink}</NavLink>\r\n    )\r\n}\r\n\r\nexport default Link\r\n\r\ntype OwnPropsType = {\r\n    way: string,\r\n    wordOfLink: string\r\n}","import React from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\nconst Button = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <button\r\n            className={styles.forButton}\r\n            type={props.typeOfButton}\r\n            onClick={props.actionOfButton}\r\n        >\r\n            {props.nameOfButton}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n\r\ntype OwnPropsType = {\r\n    typeOfButton: \"button\" | \"submit\" | \"reset\" | undefined,\r\n    actionOfButton: ()=>void,\r\n    nameOfButton: string\r\n}","import React from \"react\";\r\n\r\nconst Title = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n\r\ntype OwnPropsType = {\r\n    title: string\r\n}","import React from \"react\";\r\nimport Input from \"../common/Input\";\r\nimport Link from \"../common/LInk\";\r\nimport Button from \"../common/Button\";\r\nimport Title from \"../common/Title\";\r\nimport styles from \"./Auth.module.css\";\r\n\r\n\r\nconst SignIn = () => {\r\n    return (\r\n\r\n            <div className={styles.wrapperOfAuth}>\r\n                <Title title={'sign-in'}/>\r\n                <div><Input type=\"text\" placeholder='email'/></div>\r\n                <div><Input type=\"password\" placeholder='password'/></div>\r\n                <div><Link way={'/forgot'} wordOfLink={'Forgot password?'}/></div>\r\n                <div><Input placeholder={''} type={\"checkbox\"}/>Remember Me</div>\r\n                <div><Button typeOfButton={\"button\"} actionOfButton={() => {\r\n                }} nameOfButton='Sign In'/></div>\r\n                <div><Link way={'/register'} wordOfLink='Registration'/></div>\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SignIn","import React from \"react\";\r\nimport Input from \"../common/Input\";\r\nimport Button from \"../common/Button\";\r\nimport Link from \"../common/LInk\";\r\nimport Title from \"../common/Title\";\r\nimport styles from \"./Auth.module.css\";\r\n\r\n\r\nconst Register = () => {\r\n    return (\r\n\r\n            <div className={styles.wrapperOfAuth}>\r\n                <Title title='register'/>\r\n                <div><Input placeholder={'email'} type={\"text\"}/></div>\r\n                <div><Input placeholder={'password'} type={\"text\"}/></div>\r\n                <div><Input placeholder={'repeat password'} type={\"text\"}/></div>\r\n                <div><Button typeOfButton={\"button\"} actionOfButton={() => {\r\n                }} nameOfButton={'Register'}/></div>\r\n                <Link way={'/sign-in'} wordOfLink='Sign In'/>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Register","import React from \"react\";\r\nimport Title from \"../common/Title\";\r\nimport Button from \"../common/Button\";\r\nimport Link from \"../common/LInk\";\r\nimport Input from \"../common/Input\";\r\nimport styles from './Auth.module.css'\r\n\r\n\r\nconst Forgot = () => {\r\n    return (\r\n\r\n            <div className={styles.wrapperOfAuth}>\r\n                <Title title='forgot'/>\r\n                <div><Input placeholder='email address' type={\"text\"}/></div>\r\n                <div><Button typeOfButton={\"button\"} actionOfButton={() => {\r\n                }} nameOfButton='Send email'/></div>\r\n                <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Forgot","import React from \"react\";\r\nimport Title from \"../common/Title\";\r\nimport Input from \"../common/Input\";\r\nimport Button from \"../common/Button\";\r\nimport Link from \"../common/LInk\";\r\nimport styles from \"./Auth.module.css\";\r\n\r\n\r\nconst SetNewPass = () => {\r\n    return (\r\n\r\n            <div className={styles.wrapperOfAuth}>\r\n                <Title title='Set New Password'/>\r\n                <div><Input placeholder={'new pass'} type={'text'}/></div>\r\n                <div><Input placeholder={'repeat pass'} type={'text'}/></div>\r\n                <div><Button typeOfButton={\"button\"} actionOfButton={() => {\r\n                }} nameOfButton='Set new password'/></div>\r\n                <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SetNewPass","import React from \"react\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from './Header.module.css'\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={styles.wrapperOfHeader}>\r\n            <Link way={'/sign-in'} wordOfLink={'sign-in'}/>\r\n            <Link way={'/register'} wordOfLink={'register'}/>\r\n            <Link way={'/forgot'} wordOfLink={'forgot'}/>\r\n            <Link way={'/set-new-pass'} wordOfLink={'set-new-pass'}/>\r\n            <Link way={'/sign-in'} wordOfLink={'neko'}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\nimport {Route} from \"react-router\";\r\nimport SignIn from \"./authorization/SignIn\";\r\nimport Register from \"./authorization/Register\";\r\nimport Forgot from \"./authorization/Forgot\";\r\nimport SetNewPass from \"./authorization/SetNewPass\";\r\nimport styles from \"./authorization/Auth.module.css\";\r\nimport Header from \"./authorization/Header/Header\";\r\n\r\n\r\nconst Cards = () => {\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Route path='/sign-in' render={() => <SignIn/>}/>\r\n            <Route path='/register' render={() => <Register/>}/>\r\n            <Route path='/forgot' render={() => <Forgot/>}/>\r\n            <Route path='/set-new-pass' render={() => <SetNewPass/>}/>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n\r\n","import React from \"react\";\r\n\r\nconst initialState = {}\r\n\r\nconst forgotReducer = (state = initialState) =>{\r\n    return state\r\n}\r\n\r\nexport default forgotReducer","import React from \"react\";\r\n\r\nconst initialState = {}\r\n\r\nconst profileReducer = (state = initialState) =>{\r\nreturn state\r\n}\r\n\r\nexport default profileReducer","import React from \"react\";\r\n\r\nconst initialState = {}\r\n\r\nconst registerReducer = (state = initialState) =>{\r\n\r\n    return state\r\n}\r\n\r\nexport default registerReducer","import React from \"react\";\r\n\r\nconst initialState = {}\r\n\r\nconst setNewPassReducer = (state = initialState ) =>{\r\nreturn state\r\n}\r\n\r\nexport default setNewPassReducer","import React from \"react\";\r\n\r\nconst initialState = {}\r\n\r\nconst signInReducer = (state = initialState) =>{\r\n\r\n    return state\r\n}\r\n\r\nexport default signInReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport forgotReducer from \"./reducers/forgot-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport registerReducer from \"./reducers/registser-reducer\";\r\nimport setNewPassReducer from \"./reducers/setNewPass-reducer\";\r\nimport signInReducer from \"./reducers/signIn-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    register: registerReducer,\r\n    setNewPass: setNewPassReducer,\r\n    signIn: signInReducer,\r\n    profile:profileReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport Cards from \"./ui/Cards\";\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\n\n\nfunction App() {\n  return (\n    <HashRouter>\n        <Provider store={store}>\n      <Cards/>\n         </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfAuth\":\"Auth_wrapperOfAuth__3XmyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forLinks\":\"Common_forLinks__1l5g1\",\"forInput\":\"Common_forInput__3E9bg\",\"forButton\":\"Common_forButton__3VnRI\"};"],"sourceRoot":""}